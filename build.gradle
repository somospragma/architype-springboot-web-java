buildscript {
    ext {
        springBootVersion = '3.4.2'
    }
}
plugins {
    id 'org.springframework.boot' version '3.5.0'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'java'
}

group = 'com.pragma'
version = '0.0.1-SNAPSHOT'
description = 'businessarea'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
    targetCompatibility = JavaVersion.VERSION_21
}
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}
allprojects {
    repositories {
        mavenCentral()
    }
}
repositories {
    mavenCentral()
}
subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'jacoco'

    task allDependencies(type: DependencyReportTask) {}

    dependencies {
        implementation "org.springframework.boot:spring-boot-starter-validation:${springBootVersion}"
        implementation "org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}"
        implementation "org.springframework.boot:spring-boot-starter-aop:${springBootVersion}"
        implementation 'com.microsoft.sqlserver:mssql-jdbc:12.2.0.jre11'
        implementation "org.springframework.boot:spring-boot-starter-data-mongodb:${springBootVersion}"
        implementation 'org.mongodb:mongodb-driver-sync:4.11.5'
        implementation 'org.mongodb:mongodb-driver-core:4.11.5'
        //implementation 'com.azure:azure-cosmos:4.68.0'
        implementation 'org.xmlunit:xmlunit-core:2.10.0'
        implementation 'jakarta.annotation:jakarta.annotation-api:3.0.0'
        implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'
        implementation 'org.mapstruct:mapstruct:1.5.5.Final'
        implementation 'io.micrometer:micrometer-core:1.14.1'
        implementation 'com.azure:azure-security-keyvault-keys:4.9.0'
        implementation 'com.azure:azure-security-keyvault-secrets:4.9.0'
        implementation "org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}"
        implementation 'com.azure:azure-storage-blob:12.29.0'
        implementation 'com.azure.spring:spring-cloud-azure-starter-storage-blob:5.22.0'
        implementation 'com.microsoft.azure:applicationinsights-agent:3.6.2'
        implementation 'com.microsoft.azure:applicationinsights-logging-logback:2.6.4'
        compileOnly 'org.projectlombok:lombok:1.18.36'
        annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
        annotationProcessor 'org.projectlombok:lombok:1.18.36'
        testImplementation "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
        testImplementation 'com.tngtech.archunit:archunit-junit5:1.4.0'
        compileOnly 'jakarta.servlet:jakarta.servlet-api:6.0.0'
    }
    test {
        useJUnitPlatform()
        finalizedBy jacocoTestReport
    }
    bootJar {
        enabled = false
    }
    jar {
        enabled = true
    }
    jacocoTestReport {
        dependsOn test
        reports {
            xml.required = true
            html.required = true
        }
    }
    jacoco {
        toolVersion = "0.8.11"
    }
}


tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}
dependencies {
    implementation "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
    testImplementation "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
    testImplementation 'com.tngtech.archunit:archunit-junit5:1.4.0'
    implementation 'com.microsoft.azure:applicationinsights-logging-logback:2.6.4'
}
